-------------------------------GENERACION ARCHIVO SEGUNDA ENTREGA-----------------------------------
--create table data_entrante.base_entrega2_mas630 as
with primer_cis_por_acreditado as (
  select ca2.acreditado_id, c2.cuentascis
  from public.cuentaacreditado ca2 
  join public.cuentas c2 on c2.cuentas_id = ca2.cuentas_id 
  group by ca2.acreditado_id, c2.cuentascis
),
direcciones_numeradas as (
	select d.acreditado_id, d.direccion_id, d.direccion,
	row_number() over (partition by d.acreditado_id order by d.direccion_id) as dir_num
	from public.direcciones d 
	left join primer_cis_por_acreditado pc on pc.acreditado_id = d.acreditado_id
	left join data_entrante.georreferenciacion_feb gf on gf."CIS" = pc.cuentascis
	where d.tipodireccion_id in (1,2) and d.direccionest ='A' and d.direccion is not null and trim(d.direccion)<>'' and upper(trim(d.direccion)) <> upper(trim(gf."DIRECCION"))
),
telefonos_nuevos_numerados as (
  select 
    t.acreditado_id,
    t.telefonopre,
    t.telefononum,
    row_number() over (partition by t.acreditado_id order by t.telefono_id) as tel_num
  from public.telefono t
  where t.tipotelefono_id = 4
)
select 
		c.cuentasnum ID_DE_CREDITO,
		c.cuentasgeoref CHECK_GEORREF,
		c.cuentascis CIS,
		a.acreditado_id acreditado_id,
		/*d.direccion_id direccion_id,*/
		a.acreditadonum NO_ACREDITADO,
		a.acreditadoidenti IDENTIFICACION,
		a.acreditadonom NOMBRE,
		case 
			when c.tipoestrategia_id = 1 then 'DESCUENTO DIRECTO'
			when c.tipoestrategia_id = 2 then 'ENTREGA TDC'
			when c.tipoestrategia_id = 3 then 'ENTREGA TDD'
			when c.tipoestrategia_id = 4 then 'TOKENIZACION'
		end ESTRATEGIA,
		gf."DIRECCION" DIRECCION_DATABANCO,
		/*string_agg(distinct case when d.tipodireccion_id =2 then direccion else null end, ' / ')
		as DIRECCION_LABORAL,*/
		case
		  when gd1.pais is not null then gd1.pais else null
		end as PAIS_1,
		case
		  when gd1.provincia is not null then gd1.provincia else null
		end as PROVINCIA_1,
		case
		  when gd1.distrito is not null then gd1.distrito else null
		end as DISTRITO_1,
		case
		  when gd1.corregimiento is not null then gd1.corregimiento else null
		end as CORREGIMIENTO_1,		
		upper(d1.direccion) as DIRECCION_1,
		case
		  when gd1.geodomiciliolati is not null and gd1.geodomiciliolongi is not null then gd1.geodomiciliolati || ',' || gd1.geodomiciliolongi else null
		end as LOCALIZACION_1,
		case
		  when gd2.pais is not null then gd2.pais else null
		end as PAIS_2,
		case
		  when gd2.provincia is not null then gd2.provincia else null
		end as PROVINCIA_2,
		case
		  when gd2.distrito is not null then gd2.distrito else null
		end as DISTRITO_2,
		case
		  when gd2.corregimiento is not null then gd2.corregimiento else null
		end as CORREGIMIENTO_2,			
		upper(d2.direccion) as DIRECCION_2, 
		case
		  when gd2.geodomiciliolati is not null and gd2.geodomiciliolongi is not null then gd2.geodomiciliolati || ',' || gd2.geodomiciliolongi else null
		end as LOCALIZACION_2,
		case
		  when gd3.pais is not null then gd3.pais else null
		end as PAIS_3,
		case
		  when gd3.provincia is not null then gd3.provincia else null
		end as PROVINCIA_3,
		case
		  when gd3.distrito is not null then gd3.distrito else null
		end as DISTRITO_3,
		case
		  when gd3.corregimiento is not null then gd3.corregimiento else null
		end as CORREGIMIENTO_3,	
		upper(d3.direccion) as DIRECCION_3,
		case
		  when gd3.geodomiciliolati is not null and gd3.geodomiciliolongi is not null then gd3.geodomiciliolati || ',' || gd3.geodomiciliolongi else null
		end as LOCALIZACION_3,
		case
		  when gd4.pais is not null then gd4.pais else null
		end as PAIS_4,
		case
		  when gd4.provincia is not null then gd4.provincia else null
		end as PROVINCIA_4,
		case
		  when gd4.distrito is not null then gd4.distrito else null
		end as DISTRITO_4,		
		case
		  when gd4.corregimiento is not null then gd4.corregimiento else null
		end as CORREGIMIENTO_4,			
		upper(d4.direccion) as DIRECCION_4,
		case
		  when gd4.geodomiciliolati is not null and gd4.geodomiciliolongi is not null then gd4.geodomiciliolati || ',' || gd4.geodomiciliolongi else null
		end as LOCALIZACION_4,
		/*string_agg(distinct case when d.tipodireccion_id in (1,2) and d.direccion <> '' and d.direccionest = 'A' and upper(trim(d.direccion)) <> upper(trim(gf."DIRECCION")) then concat(gd.geodomiciliolati, ',', gd.geodomiciliolongi) else null end, ' / ') AS LOCALIZACIONES,*/
		gf."NOMBRE EMPRESA DONDE LABORA" NOMBRE_EMPRESA_LABORA_DATABANCO,
		string_agg(distinct case when d.tipodireccion_id =2 and upper(trim(direccioneslugtra)) <> upper(trim(gf."NOMBRE EMPRESA DONDE LABORA")) and direccioneslugtra <> '' then direccioneslugtra else null end, ' / ')
		as LUGAR_TRABAJO,
        --string_agg(distinct case when d.tipodireccion_id = 1 and direccion is not null and direccionest = 'A' then concat(gd.geodomiciliolati, ',', gd.geodomiciliolongi) else null end, ' / ') AS LOCALIZACION_RESIDENCIAL,
		gf."CELULAR" CELULAR_DATABANCO,
		gf."TELEFONOS" TELEFONOS_DATABANCO,
		tn1.telefonopre as TELEFONOS_NUEVOS_PREFIJO_1,
		tn1.telefononum as TELEFONOS_NUEVOS_NUMERO_1,
		tn2.telefonopre as TELEFONOS_NUEVOS_PREFIJO_2,
		tn2.telefononum as TELEFONOS_NUEVOS_NUMERO_2,
		/*string_agg(distinct case when t.tipotelefono_id = 4 then t.telefonopre::TEXT else null end, ' / ')
		as TELEFONOS_NUEVOS_PREFIJO,
		string_agg(distinct case when t.tipotelefono_id = 4 then t.telefononum else null end, ' / ')
		as TELEFONOS_NUEVOS_NUMERO,
        string_agg(distinct case when t.tipotelefono_id = 1 then concat('+','(',t.telefonopre,')',t.telefononum) else null end, ' / ')
		as CELULAR,
		string_agg(distinct case when t.tipotelefono_id = 2 then concat('+','(',t.telefonopre,')',t.telefononum) else null end, ' / ')
		as TELEFONO_RESIDENCIAL,
		string_agg(distinct case when t.tipotelefono_id = 3 then concat('+','(',t.telefonopre,')',t.telefononum) else null end, ' / ')
		as TELEFONO_FIJO,
		string_agg(distinct case when t.tipotelefono_id = 5 then concat('+','(',t.telefonopre,')',t.telefononum) else null end, ' / ')
		as TELEFONO_ADICIONAL,*/
		gf."CORREO ELECTRONICO" CORREO_DATABANCO,
		/*string_agg(distinct case when co.tipocorreo_id = 1 then co.correoelec else null end, ' / ')
		as CORREO_ELECTRONICO_PERSONAL,*/
		string_agg(distinct case when co.tipocorreo_id = 2 and trim(co.correoelec) <> trim(gf."CORREO ELECTRONICO") then co.correoelec else null end, ' / ')
		as CORREO_ELECTRONICO_NUEVO,
		string_agg(distinct concat(f.fincafolio), ' / ')
		as NUMERO_DE_FINCA,
		string_agg(distinct concat(f.fincacategoriasocial), ' / ')
		as CATEGORIA_SOCIAL,
		case
			when f.tipopredio_id = 1 then 'RESIDENCIAL'
			when f.tipopredio_id = 2 then 'COMERCIAL'
			when f.tipopredio_id = 3 then 'INDUSTRIAL'
		end TIPO_DE_PREDIO,
		case 
			when c.tipoproducto_id = 1 then 'FINANCOMER'
			when c.tipoproducto_id = 2 then 'PRESTAMO HIPOTECARIO'
			when c.tipoproducto_id = 3 then 'PRESTAMO PERSONAL'
			when c.tipoproducto_id = 4 then 'TARJETA DE CREDITO'
			when c.tipoproducto_id = 5 then 'PRESTAMO AUTO'
			when c.tipoproducto_id = 6 then 'TARJETA DEBITO'
		end TIPO_DE_PRODUCTO,
		c.cuentasdiasmoragave DIAS_DE_MORA_GAVETA,
		c.cuentassalpro SALDO_PRODUCTO,
		'GEORREFERENCIABLE' georreferenciable
		from public.cuentas c
		join public.cuentaacreditado ca on ca.cuentas_id = c.cuentas_id
		join public.acreditado a  on a.acreditado_id = ca.acreditado_id
		left join public.direcciones d on d.acreditado_id = a.acreditado_id
		left join public.telefono t on t.acreditado_id = a.acreditado_id
		left join public.geodomicilio1 gd on gd.direccion_id = d.direccion_id
		left join public.correo co on co.acreditado_id = a.acreditado_id
		left join public.propiedad p on p.acreditado_id = a.acreditado_id
		left join public.finca f on f.finca_id = p.finca_id
		left join data_entrante.georreferenciacion_feb gf on gf."CIS" = c.cuentascis
		left join public.metadireccion m on m.direccion_id = d.direccion_id
		left join direcciones_numeradas d1 on d1.acreditado_id = a.acreditado_id and d1.dir_num =1
		left join direcciones_numeradas d2 on d2.acreditado_id = a.acreditado_id and d2.dir_num =2
		left join direcciones_numeradas d3 on d3.acreditado_id = a.acreditado_id and d3.dir_num =3
		left join direcciones_numeradas d4 on d4.acreditado_id = a.acreditado_id and d4.dir_num =4
		left join public.geodomicilio1 gd1 on gd1.direccion_id = d1.direccion_id
		left join public.geodomicilio1 gd2 on gd2.direccion_id = d2.direccion_id
		left join public.geodomicilio1 gd3 on gd3.direccion_id = d3.direccion_id
		left join public.geodomicilio1 gd4 on gd4.direccion_id = d4.direccion_id
		left join telefonos_nuevos_numerados tn1 on tn1.acreditado_id = a.acreditado_id and tn1.tel_num = 1
		left join telefonos_nuevos_numerados tn2 on tn2.acreditado_id = a.acreditado_id and tn2.tel_num = 2
		where c.cuentasgeoref is true and c.cuentasentrega = 'AGREGAR ENTREGA 1'
		group by c.cuentasnum, c.cuentascis, a.acreditadonum, a.acreditadoidenti,a.acreditado_id,gd1.geodomiciliolati,gd1.geodomiciliolongi,gd2.geodomiciliolati,gd2.geodomiciliolongi,
		gd3.geodomiciliolati,gd3.geodomiciliolongi,gd4.geodomiciliolati,gd4.geodomiciliolongi,/*d.direccion_id,*/ a.acreditadonom,c.cuentasgeoref, c.tipoestrategia_id, c.cuentasdiasmoragave, 
		c.tipoproducto_id, c.cuentassalpro,f.tipopredio_id, gf."DIRECCION",gf."CELULAR",gf."TELEFONOS",gf."CORREO ELECTRONICO",gf."NOMBRE EMPRESA DONDE LABORA",d1.direccion, d2.direccion, 
		d3.direccion, d4.direccion,gd1.pais,gd2.pais,gd3.pais,gd4.pais,gd1.provincia,gd2.provincia,gd3.provincia,gd4.provincia,gd1.distrito,gd2.distrito,gd3.distrito,gd4.distrito,
		gd1.corregimiento,gd2.corregimiento,gd3.corregimiento,gd4.corregimiento,tn1.telefonopre,tn1.telefononum,tn2.telefonopre,tn2.telefononum;


-----------------------ESTADISTICAS ENTREGA 2------------------------------------------------------

------PARA BUSCAR DIR DE ENTREGA 2: Cuentas con direcciones georreferenciadas--------------
select pebm.direccion_databanco, pebm.direccion_1,*,
	similarity(pebm.direccion_databanco, pebm.direccion_1) as similitud
from data_entrante.base_entrega2_mas630 pebm 
where pebm.localizacion_1 <> '';

------PARA BUSCAR DIR DE ENTREGA 2: Cuentas con direcciones verificadas y ajustadas con georreferenciacion-----------
select pebm.direccion_databanco, pebm.direccion_1,*,
	similarity(pebm.direccion_databanco, pebm.direccion_1) as similitud
from data_entrante.base_entrega2_mas630 pebm 
where pebm.localizacion_1 <> '' and similarity(pebm.direccion_databanco, pebm.direccion_1) >= 0.4 and similarity(pebm.direccion_databanco, pebm.direccion_1) < 0.9 and pebm.direccion_2 is null;

------PARA BUSCAR DIR DE ENTREGA 2:Cuentas con direcciones no encontradas y cuya direccion se georreferenció-----------
select pebm.direccion_databanco, pebm.direccion_1,*,
	similarity(pebm.direccion_databanco, pebm.direccion_1) as similitud
from data_entrante.base_entrega2_mas630 pebm 
where pebm.localizacion_1 <> '' and similarity(pebm.direccion_databanco, pebm.direccion_1) > 0.9;

------PARA BUSCAR DIR DE ENTREGA 2: Cuentas con direcciones no encontradas y cuya direccion no se georreferencia------------
select pebm.direccion_databanco, pebm.direccion_1,*,
	similarity(pebm.direccion_databanco, pebm.direccion_1) as similitud
from data_entrante.base_entrega2_mas630 pebm 
where pebm.localizacion_1 = '' and similarity(pebm.direccion_databanco, pebm.direccion_1) < 0.9 and direccion_2 is null;

------PARA BUSCAR DIR DE ENTREGA 2: Cuentas con direccion nueva encontrada y georreferenciada------
select pebm.direccion_databanco, pebm.direccion_1,*,
	similarity(pebm.direccion_databanco, pebm.direccion_1) as similitud
from data_entrante.base_entrega2_mas630 pebm 
where pebm.localizacion_1 <> '' and similarity(pebm.direccion_databanco, pebm.direccion_1) < 0.4 and similarity(pebm.direccion_databanco, pebm.direccion_1) <= 0.9 or pebm.direccion_2 is not null;

------PARA BUSCAR DIR DE ENTREGA 2: Cuentas con telefono nuevo asociado--------
select * from data_entrante.base_entrega2_mas630 pebm 
where pebm.telefonos_nuevos_numero <> '';

------PARA BUSCAR DIR DE ENTREGA 2: Cuentas con folios asociados-------------
select * from data_entrante.base_entrega2_mas630 pebm 
where pebm.numero_de_finca <> '';

------PARA BUSCAR DIR DE ENTREGA 2: Cuentas con lugar de trabajo nuevo----------------
select * from data_entrante.base_entrega2_mas630 ae 
where ae.lugar_trabajo <> '';

------PARA BUSCAR DIR DE ENTREGA 1: Cuentas con correos nuevos--------------------------
select * from data_entrante.archivo_entrega_1 ae 
where ae.correo_electronico_nuevo <> '';

